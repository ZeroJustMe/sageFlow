name: CMake - Build and Test

on:
  pull_request:
    branches: [ main, join_pre_experiment ]
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: ${{ matrix.os }} | CMake ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    env:
      # 限制 CI 运行时日志级别，避免 DEBUG 级别日志过多
      CANDY_LOG_LEVEL: info
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        build_type: [ Release ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 安装通用 C++ 构建工具链（与 dev-ci.yml 风格一致），不强制依赖 Ninja
      - name: Install C++ toolchain (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            cmake \
            pkg-config

      - name: Show compiler versions
        if: runner.os == 'Linux'
        run: |
          g++ --version || true
          gcc --version || true
          cmake --version || true

      - name: Configure CMake
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DBUILD_TESTING=ON \
            -DCANDY_ENABLE_METRICS=ON \
            -DCANDY_BUILD_PYBIND=OFF \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON

      - name: Build
        run: |
          cmake --build build --config ${{ matrix.build_type }} --parallel

      - name: Run unit tests (ctest -L UNIT)
        run: |
          ctest --test-dir build --output-on-failure -L UNIT

      # - name: Run selected performance tests (filtered)
      #   run: |
      #     # 仅运行较快且稳定的性能相关测试，避免 CI 过长
      #     ctest --test-dir build --output-on-failure -R "(test_join_perf_scaling)" -L PERF
      - name: Run integration test
        run: |
          # 只运行集成测试中的基础 join pipeline 用例
          ctest --test-dir build --output-on-failure -R "(^test_pipeline_basic$)" -L INTEGRATION
      
      - name: Upload test logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ctest-logs
          path: |
            build/Testing/**
            build/*.log
            build/**/compile_commands.json
